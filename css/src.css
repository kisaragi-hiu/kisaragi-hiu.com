@import "headings.css";
@import "highlight-theme.css";

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  html {
    @apply md:text-[20px];
  }
  .outer {
    width: min(100ch, 90%);
    @apply mx-auto mt-[5%];
  }
  p {
    @apply my-2 text-base;
  }
  dl {
    dt {
      font-weight: 700;
    }
    dd {
      margin-left: 1rem;
    }
  }
  iframe {
    @apply rounded shadow;
  }
  li p {
    margin: 0 auto;
  }
  aside,
  article {
    p {
      line-height: 1.6;
    }
    a {
      @apply link;
    }
    figure {
      @apply max-w-max max-h-96;
      @apply shadow;
    }
    ul,
    ol {
      list-style: revert;
      @apply pl-4;
    }
    blockquote {
      border-left: 0.25rem solid;
      @apply my-4 p-4;
      @apply border-l-special;
      @apply bg-special-light;
    }
  }
}

@layer components {
  /* Blog post, covers */
  .btn {
    @apply hover:bg-accent-light;
    @apply transition duration-100 ease-in-out;
    @apply p-2 -m-2;
  }
  .link {
    @apply text-accent-strong;
    opacity: 0.9;
    transition: opacity 100ms ease;
    text-decoration: none;
    &:hover {
      opacity: 1;
      text-decoration: underline;
    }
  }
  .type-path {
    & + h1 {
      @apply mt-0;
    }
  }
  .gist {
    @apply my-4;
  }
  .meta {
    /* Format like this:
         dd1   dd2   dd3   dd4
          dt1   dt2   dt3   dt4
       Wrap each group in a <div>. This is specifically permitted in
       its definition. */
    @apply my-4 text-sm w-max gap-x-4;
    @apply flex;
    a {
      @apply text-accent-strong;
    }
  }
  .series {
    @apply hover:underline;
    &::before {
      content: "§ ";
      @apply font-bold text-accent-strong;
    }
  }
  .tag {
    &::before {
      content: "#";
    }
  }
  /* We don't have access to classes on Hugo's TOC */
  #TableOfContents {
    ul {
      @apply pl-4;
      list-style: revert;
    }
    /* just level 1 */
    & > ul {
      @apply pl-6;
    }
  }
  ul.illust-index {
    @apply p-0 flex flex-wrap gap-x-4;
    li {
      @apply p-0 list-none;
    }
    .illust-item {
      transition: all 100ms ease-in-out;
      img:hover {
        box-shadow: 0 0 1rem rgba(0, 0, 0, 0.5);
      }
      img {
        box-shadow: 0 0 0.5rem rgba(0, 0, 0, 0.5);
        max-height: 6rem;
        max-width: 6rem;
      }
    }
  }
  .badge {
    @apply my-auto mx-2;
  }
}

@layer utilities {
  .out {
    @apply hover:underline;
    &::after {
      content: "°";
    }
  }
  .side-by-side {
    display: grid;
    grid-template-columns: 4fr 5fr;
    overflow-y: auto;
  }
  .side-layout {
    grid-template-columns: 5fr 3fr;
    @apply block lg:grid;
    aside {
      @apply lg:ml-4;
    }
  }
  /* From
   https://www.accessibility-developer-guide.com/examples/hiding-elements/visually/

   "It may be surprising, but the only way to hide an element visually
   while retaining its perceptibility for screen readers is moving
   them out of the viewport using absolute positioning:" */
  .hide-visual {
    position: absolute;
    left: -10000px;
    top: auto;
    width: 1px;
    height: 1px;
    overflow: hidden;
  }
}

/* Place *outside* of any layer to always include */
article code:not(.src code) {
  @apply bg-special/50 text-special-strong;
  @apply px-1 rounded-lg;
}

.src {
  overflow-x: auto;
  @apply font-mono text-primary;
  @apply my-2;
  @apply p-2 rounded bg-special-light;
  @apply border-2 border-special-strong;
  /* This is how you can add a language header, but it's really noisy.
  */
  /* code::before { */
  /*   content: attr(data-lang); */
  /*   display: block; */
  /*   width: max-content; */
  /* } */
  .hl {
    @apply font-bold;
  }
  .lnt {
    /* The line numbers */
    @apply text-secondary mr-4;
  }
}
